<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.mapper.BoardMapper">

<!--  1. namespace 속성값 = mapper인터페이스와 동일한 이름 -->
<!-- 	MyBatis는 Mapper 인터페이스와 XML을 인터페이스의 이름과 namespace의 속성값으로 판단-->
	
<!--  2. id 속성 값은 Mapper인터페이스 메서드의 이름과 동일해야함 -->
<!-- 	select 태그의 경우 resultType 속성을가지는데, 이 값은 인터페이스에 선언된 메서드의 리턴타입과 동일해야함 -->
<!-- 	resultType속성 값은 select 쿼리의 결과를 특정 클래스의 객체로 만들기위해 설정 -->

	<!-- 전체 게시물 갯수 -->
	<!-- 검색시 검색된 게시물 갯수를 불러오기 위하여 검색쿼리 include  -->
	<select id="getTotalCount" resultType="int">
		select count(*) from tbl_board 
			where 
		
			 <include refid="criteria"></include>
		 
			bno > 0 
	</select>
	
	<!-- 게시물 리스트 -->
	<!-- CDATA은 xml 에서 부등호( > )를 사용하기 위해서 사용 -->
	<select id="getList" resultType="org.zerock.domain.BoardVO">
		<![CDATA[
		select * from tbl_board where bno > 0 
		]]>
	</select>

	<!-- 필요할때 include 할수있게 검색 SQL 쿼리를 별도로 보관 -->
	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							content like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							writer like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<!--  게시물 리스트(페이징) - 검색 기능구현 후 수정   -->
	<select id="getListWithPaging" resultType="org.zerock.domain.BoardVO">
	 <![CDATA[
			  select 
			    bno, title, content, writer, regdate, updatedate
			  from 
			      (
			      select /*+INDEX_DESC(tbl_board pk_board) */
			        rownum rn, bno, title, content, writer, regdate, updatedate 
			      from 
			        tbl_board
		      where 
 		 ]]>
 		 <!--   <include refid="criteria"></include>  -->
 		 
		<!-- 검색 추가 -->
		<!-- sql 태그로 검색쿼리를 별도저장 했기에 밑의 쿼리 없이 위의 include를 사용가능 -->
		<!-- MyBatis는 JavaBean 규칙이 아닌 get/set 메서드만 활용해 이름으로 대상감지 
						(Criteria 의 getTypeArr() 결과인 문자열 배열의 typeArr) -->
		<!-- choose 안쪽은 OR, 바깥쪽은 trim을 이용해 앞에서 생성되는 OR을 지워줌  -->
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
				<foreach item='type' collection="typeArr">
					<trim prefix="OR">
						<choose>
							<when test="type == 'T'.toString()">
								title like '%'||#{keyword}||'%'
							</when>
							<when test="type == 'C'.toString()">
								content like '%'||#{keyword}||'%'
							</when>
							<when test="type == 'W'.toString()">
								writer like '%'||#{keyword}||'%'
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		 <![CDATA[    
		      rownum <= #{pageNum} * #{amount}
		      )
	 	 where rn > (#{pageNum} -1) * #{amount}   
		  ]]>
	</select>
	
	<!--  게시물 리스트(페이징)  -->
	<!-- CDATA은 xml 에서 특수문자를 사용하기 위해서 사용 -->
	<!-- sql문 힌트 (/*aaa*/)와 rownum(sql결과 넘버링) 을 인라인 뷰(다중select)로 처리 -->	
	<!-- rownum 값은 1 이상의 값이어야 동작한다 -->
	<!-- pageNum(페이지번호) , amount(데이터 수) 로 조절되는 값 -->
<!--  
	<select id="getListWithPaging" resultType="org.zerock.domain.BoardVO">
		<![CDATA[
		select bno, title, content, writer, regdate, updatedate 
			from (
				select /*+INDEX_DESC(tbl_board pk_board) */ 
					rownum rn, bno, title, content, writer, regdate, updatedate
				from
					tbl_board
				where rownum <= #{pageNum} * #{amount}
				 )
			where rn > (#{pageNum} -1) * #{amount}	 
		]]>
	</select>
-->	
	<!-- 게시물 등록 -->
	<!-- insert만 처리되고 생성된PK (bno) 값을 알 필요가 없는경우 -->
	<insert id="insert">
		insert into tbl_board (bno,title,content,writer)
		values (seq_board.nextval, #{title}, #{content}, #{writer})
	</insert>
	
	<!-- insert문이 실행되고 생성된PK 값을 알야야 하는 경우 -->
	<!-- selectKey 라는 mybatis 어노테이션을 이용해서 pk값을 미리(before) 특정한이름으로 보관  -->
	<insert id="insertSelectKey">
		<selectKey keyProperty="bno" order="BEFORE" resultType="long">
			select seq_board.nextval from dual		
		</selectKey>
	
			insert into tbl_board (bno,title,content,writer)
			values (#{bno},#{title},#{content},#{writer})
	</insert>
	
	<!-- 게시글 조회 -->
	<select id="read" resultType="org.zerock.domain.BoardVO">
		select * from tbl_board where bno= #{bno}
	</select>
	
	<!-- 게시글 삭제 -->
	<delete id="delete">
		delete from tbl_board where bno = #{bno}
	</delete>
	
	<!-- 게시글 수정 -->
	<!-- 수정시간을 현재시간으로,  -->
	<update id="update">
		update tbl_board
			set title = #{title},
			content = #{content},
			writer = #{writer},
			updateDate = sysdate
		where bno = #{bno}
	</update>
</mapper>